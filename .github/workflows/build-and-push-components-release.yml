name: Build and Push Components Release

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
        description: 'Image tag to build and push.'
      registry_name:
        required: false
        type: string
        description: 'Name of the image to publish'
        default: ghcr.io/wewanttocontributetovmclarity
      bake-group:
        required: false
        type: string
        description: 'Name of the Docker Bake group of targets'
        default: default

jobs:
  prepare-build:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
      targets: ${{ steps.targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set timestamp
        id: timestamp
        run: |
          ##
          ## Set timestamp variable
          ##

          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: List targets
        id: targets
        uses: docker/bake-action/subaction/list-targets@7a5dfed3550ca014665af2a27af8fc9d7284b9b3 # v4.5.0
        with:
          target: ${{ inputs.bake-group }}

  build-vars:
    needs: prepare-build
    runs-on: ubuntu-latest
    outputs:
      digests-cache-name: ${{ steps.build-vars.outputs.digests-cache-name }}
    steps:
      - name: Set build variables
        id: build-vars
        run: |

          ##
          ## Set digests cache name
          ##
          ##    Example: digest-1234-a2850e9cc4e2b3a3
          ##

          image_name_hash="$(sha256sum <<< "${{ needs.prepare-build.outputs.targets }}" | cut -f1 -d' ')"
          printf "digests-cache-name=digest-%s-%.16s" "${{ github.run_id }}" "${image_name_hash}" >> "$GITHUB_OUTPUT"

  build-and-push:
    runs-on: ubuntu-latest
    needs:
    - prepare-build
    - build-vars
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJson(needs.prepare-build.outputs.targets) }}
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Cache Docker layers
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@7a5dfed3550ca014665af2a27af8fc9d7284b9b3 # v4.5.0
        id: bake
        with:
          targets: ${{ needs.prepare-build.outputs.targets }}
          set: |
            *.platform=${{ matrix.platform }}
            *.output=type=image,name=${{ inputs.registry_name }}/${{ matrix.targets }},push-by-digest=true,name-canonical=true,push=true
            *.tags=
            *.cache-to=type=local,dest=/tmp/.buildx-cache
            *.cache-from=type=local,src=/tmp/.buildx-cache
        env:
          VERSION: ${{ inputs.image_tag }}
          BUILD_TIMESTAMP: ${{ needs.prepare-build.outputs.timestamp }}
          COMMIT_HASH: ${{ github.sha }}
          BUILD_OPTS: -tags=exclude_graphdriver_btrfs,exclude_graphdriver_devicemapper

      - name: Export digest
        id: digest
        run: |
          mkdir -p /tmp/digests
          digest=$(jq -r '."${{ needs.prepare-build.outputs.targets }}"."containerimage.digest"'<<< '${{ steps.bake.outputs.metadata }}')
          touch "/tmp/digests/${digest#sha256:}"
          echo "digest=${digest#sha256:}" >> "$GITHUB_OUTPUT"

      - name: Upload digests
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ needs.build-vars.outputs.digests-cache-name }}-${{ steps.digest.outputs.digest }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  merge-and-push:
    runs-on: ubuntu-latest
    needs:
      - build-vars
      - prepare-build
      - build-and-push
    steps:
      - name: Download digests
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          pattern: ${{ needs.build-vars.outputs.digests-cache-name }}-*
          merge-multiple: true
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create \
            --tag "${{ inputs.registry_name }}/${{ needs.prepare-build.outputs.targets }}:${{ inputs.image_tag }}" \
            $(printf '${{ inputs.registry_name }}/${{ needs.prepare-build.outputs.targets }}@sha256:%s ' *)

      - name: Inspect image
        run: docker buildx imagetools inspect ${{ inputs.registry_name }}/${{ needs.prepare-build.outputs.targets }}:${{ inputs.image_tag }}
