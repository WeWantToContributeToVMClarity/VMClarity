name: End-to-End testing

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
        description: 'Image tag to build and push.'
      platform:
        required: true
        type: string
        description: 'Platform used to run end-to-end tests. Supported values are `docker` and `kubernetes`.'

jobs:
  images:
    runs-on: ubuntu-latest
    outputs:
      apiserver-image: ${{ steps.images.outputs.apiserver-image }}
      orchestrator-image: ${{ steps.images.outputs.orchestrator-image }}
      ui-backend-image: ${{ steps.images.outputs.ui-backend-image }}
      ui-image: ${{ steps.images.outputs.ui-image }}
      cli-image: ${{ steps.images.outputs.cli-image }}
      cr-discovery-server-image: ${{ steps.images.outputs.cr-discovery-server-image }}
      plugin-kics-image: ${{ steps.images.outputs.plugin-kics-image}}
    steps:
      - name: Set container image names
        id: images
        run: |
          {
            echo "apiserver-image=vmclarity-apiserver-${{ inputs.image_tag }}"
            echo "orchestrator-image=vmclarity-orchestrator-${{ inputs.image_tag }}"
            echo "ui-backend-image=vmclarity-ui-backend$-${{ inputs.image_tag }}"
            echo "ui-image=vmclarity-ui-${{ inputs.image_tag }}"
            echo "cli-image=vmclarity-cli-${{ inputs.image_tag }}"
            echo "cr-discovery-server-image=vmclarity-cr-discovery-server-${{ inputs.image_tag }}"
            echo "plugin-kics-image=vmclarity-plugin-kics-${{ inputs.image_tag }}"
          } >> "$GITHUB_OUTPUT"

  run:
    runs-on: ubuntu-latest
    needs: images
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          # NOTE(chrisgacsal): Use actions/cache for caching Go dependency and build caches
          # as if provides better flexibility like setting the cache key which reduces cache misses significantly.
          cache: false
          go-version-file: '.go-version'

      - name: Free up disk space
        run: |
          df -h

          # Remove .NET related tooling
          sudo du -sh /usr/share/dotnet
          sudo rm -rf /usr/share/dotnet

          # Remove Android related tooling
          sudo du -sh /usr/local/lib/android
          sudo rm -rf /usr/local/lib/android

          # Remove CodeQL
          sudo du -sh /opt/hostedtoolcache/CodeQL
          sudo rm -rf /opt/hostedtoolcache/CodeQL

          df -h

      - name: Setup Go caching
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.ref_name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ github.ref_name }}-
            ${{ runner.os }}-go-${{ github.event.repository.default_branch }}-

      - name: Install kind for Kubernetes
        if: inputs.platform == 'kubernetes'
        uses: engineerd/setup-kind@aa272fe2a7309878ffc2a81c56cfe3ef108ae7d0 # v0.5.0
        with:
          skipClusterCreation: true

      - name: Install helm for Kubernetes
        if: inputs.platform == 'kubernetes'
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0

      - name: Install btrfs
        run: sudo apt-get install libbtrfs-dev -y
    
      - name: Download artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7

      - name: Run end to end tests
        env:
          VMCLARITY_E2E_APISERVER_IMAGE:  ${{ github.workspace }}/vmclarity-apiserver-${{ inputs.image_tag }}
          VMCLARITY_E2E_ORCHESTRATOR_IMAGE: ${{ github.workspace }}/vmclarity-orchestrator-${{ inputs.image_tag }}
          VMCLARITY_E2E_UI_IMAGE: ${{ github.workspace }}/vmclarity-ui-${{ inputs.image_tag }}
          VMCLARITY_E2E_UIBACKEND_IMAGE: ${{ github.workspace }}/vmclarity-ui-backend-${{ inputs.image_tag }}
          VMCLARITY_E2E_SCANNER_IMAGE: ${{ github.workspace }}/vmclarity-cli-${{ inputs.image_tag }}
          VMCLARITY_E2E_CR_DISCOVERY_SERVER_IMAGE: ${{ github.workspace }}/vmclarity-cr-discovery-server-${{ inputs.image_tag }}
          VMCLARITY_E2E_PLUGIN_KICS_IMAGE: ${{ github.workspace }}/vmclarity-plugin-kics-${{ inputs.image_tag }}
          VMCLARITY_E2E_PLATFORM: ${{ inputs.platform }}
        run: |
          if [[ "${{ inputs.platform }}" == "kubernetes" ]]; then
            make e2e-k8s
          elif [[ "${{ inputs.platform }}" == "docker" ]]; then
            make e2e-docker
          else
            echo "Invalid platform"
          fi
